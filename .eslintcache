[{"/home/tudor/Desktop/thinkful/students/Sergiu/Weather-app/src/index.js":"1","/home/tudor/Desktop/thinkful/students/Sergiu/Weather-app/src/App.js":"2","/home/tudor/Desktop/thinkful/students/Sergiu/Weather-app/src/fetcher.js":"3","/home/tudor/Desktop/thinkful/students/Sergiu/Weather-app/src/Components/Loading.js":"4","/home/tudor/Desktop/thinkful/students/Sergiu/Weather-app/src/Components/Location.js":"5","/home/tudor/Desktop/thinkful/students/Sergiu/Weather-app/src/Components/NoPosition.js":"6","/home/tudor/Desktop/thinkful/students/Sergiu/Weather-app/src/Components/Clock.js":"7","/home/tudor/Desktop/thinkful/students/Sergiu/Weather-app/src/Components/CurrentWeather.js":"8","/home/tudor/Desktop/thinkful/students/Sergiu/Weather-app/src/Components/HourlyWeather.js":"9","/home/tudor/Desktop/thinkful/students/Sergiu/Weather-app/src/Components/DailyWeather.js":"10","/home/tudor/Desktop/thinkful/students/Sergiu/Weather-app/src/Util/Icons.js":"11","/home/tudor/Desktop/thinkful/students/Sergiu/Weather-app/src/Util/Date.js":"12","/home/tudor/Desktop/thinkful/students/Sergiu/Weather-app/src/seedData/locations.js":"13","/home/tudor/Desktop/thinkful/students/Sergiu/Weather-app/src/math.js":"14"},{"size":169,"mtime":1611934910568,"results":"15","hashOfConfig":"16"},{"size":3303,"mtime":1613488608376,"results":"17","hashOfConfig":"16"},{"size":96,"mtime":1611676453732,"results":"18","hashOfConfig":"16"},{"size":143,"mtime":1613142415476,"results":"19","hashOfConfig":"16"},{"size":900,"mtime":1613488608376,"results":"20","hashOfConfig":"16"},{"size":124,"mtime":1611676453732,"results":"21","hashOfConfig":"16"},{"size":615,"mtime":1612883546706,"results":"22","hashOfConfig":"16"},{"size":661,"mtime":1612883546706,"results":"23","hashOfConfig":"16"},{"size":4053,"mtime":1613142415476,"results":"24","hashOfConfig":"16"},{"size":940,"mtime":1613488786855,"results":"25","hashOfConfig":"16"},{"size":258,"mtime":1611934910568,"results":"26","hashOfConfig":"16"},{"size":338,"mtime":1612883546706,"results":"27","hashOfConfig":"16"},{"size":3512,"mtime":1612898404235,"results":"28","hashOfConfig":"16"},{"size":10715,"mtime":1612899050391,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"19x4hj5",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},"/home/tudor/Desktop/thinkful/students/Sergiu/Weather-app/src/index.js",[],["63","64"],"/home/tudor/Desktop/thinkful/students/Sergiu/Weather-app/src/App.js",[],"/home/tudor/Desktop/thinkful/students/Sergiu/Weather-app/src/fetcher.js",[],"/home/tudor/Desktop/thinkful/students/Sergiu/Weather-app/src/Components/Loading.js",[],"/home/tudor/Desktop/thinkful/students/Sergiu/Weather-app/src/Components/Location.js",["65","66"],"import React, { useState } from \"react\";\nimport locationData from \"../seedData/locations\";\n\nimport Loading from \"./Loading\";\n\nimport useSWR from \"swr\";\nimport fetcher from \"../fetcher\";\n\nexport default function Location({ latitude, longitude }) {\n  const locationURL = `https://api.openweathermap.org/data/2.5/find?lat=${latitude}&lon=${longitude}&cnt=5&appid=faa43b230bd3f3f5c33027ab0a77b157`;\n  // const fakeFetcher = key => Promise.resolve(locationData)\n  const { data, error } = useSWR(locationURL, fetcher);\n  // const { data, error } = useSWR(locationURL, fakeFetcher);\n\n  if (error) return <h1>Error...</h1>;\n  if (!data) return <Loading message={\"Location is loading...\"} />;\n\n  const { list } = data;\n\n  return (\n    <div>\n      <h2 className=\"location-wp\">\n        {list[0].name},{\" \"}\n        <span style={{ color: \"orangered\" }}>{list[0].sys.country}</span>\n      </h2>\n    </div>\n  );\n}\n","/home/tudor/Desktop/thinkful/students/Sergiu/Weather-app/src/Components/NoPosition.js",[],"/home/tudor/Desktop/thinkful/students/Sergiu/Weather-app/src/Components/Clock.js",[],"/home/tudor/Desktop/thinkful/students/Sergiu/Weather-app/src/Components/CurrentWeather.js",[],"/home/tudor/Desktop/thinkful/students/Sergiu/Weather-app/src/Components/HourlyWeather.js",["67","68"],"import React, { useState, useEffect } from \"react\";\nimport Chart from \"chart.js\";\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\nimport { Line } from \"react-chartjs-2\";\nimport { extrema } from \"../math\";\n\n//TODO Remove empty data points\n//TODO Add icons\n//TODO Style fonts\n\nconst data = {\n  labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n\n  datasets: [\n    {\n      label: \"My First dataset\",\n      // backgroundColor: \"rgba(255,99,132,0.2)\",\n      backgroundColor: \"rgba(255,99,132,0.0)\",\n      borderColor: \"orangered\",\n      borderWidth: 1,\n      hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\n      hoverBorderColor: \"rgba(255,99,132,1)\",\n\n      data: [65, 59, 80, 81, 56, 55, 40],\n    },\n  ],\n};\n\nfunction HourlyWeather({ hourly }) {\n  // RTFM\n\n  function computeNumPoints() {\n    const ww = window.innerWidth;\n    let _numPoints = 6;\n    if (ww >= 640) {\n      _numPoints = 12;\n    }\n    if (ww >= 720) {\n      _numPoints = 18;\n    }\n    if (ww >= 1024) {\n      _numPoints = 24;\n    }\n    // console.log(`pts: ${_numPoints}`)\n    return _numPoints;\n  }\n\n  //NOTE copy of chart object\n  const graphData = { ...data };\n\n  graphData.labels = [];\n  graphData.datasets[0].data = [];\n  const [numPoints, setNumPoints] = useState(computeNumPoints());\n\n  useEffect(() => {\n    console.log(\"Observing resize\");\n    const listener = () => {\n      const newValue = computeNumPoints();\n      if (numPoints !== newValue) {\n        console.log(\n          `Resized to ${window.innerWidth}, oldpts:${numPoints} pts: ${newValue}`\n        );\n        setNumPoints(newValue);\n      }\n    };\n\n    window.addEventListener(\"resize\", listener);\n\n    return () => {\n      console.log(\"cleanup\");\n      window.removeEventListener(\"resize\", listener);\n    };\n  }, [numPoints]);\n\n  for (let i = 0; i < numPoints; i++) {\n    // getHourlyTemp.push(hourly[i].temp);\n    const formatttedDate = new Date(hourly[i].dt * 1000).getHours();\n    graphData.labels.push(formatttedDate);\n    graphData.datasets[0].data.push(hourly[i].temp);\n  }\n  const minMax = extrema(graphData.datasets[0].data, 0.5);\n  // console.log(`minMax`, minMax, graphData.datasets[0].data)\n\n  return (\n    <div>\n      <h2>Bar Example (custom size)</h2>\n\n      <div style={{ position: \"relative\", height: \"240px\", width: \"90%\" }}>\n        <Line\n          data={graphData}\n          // width={window.innerWidth - 100}\n          // height={150}\n          options={{\n            layout: {\n              padding: 35,\n            },\n\n            labels: {\n              defaultFontSize: 24,\n            },\n            plugins: {\n              // Change options for ALL labels of THIS CHART\n              datalabels: {\n                //NOTE @see https://chartjs-plugin-datalabels.netlify.app/guide/\n                formatter: function (value, context) {\n                  const index = context.dataIndex;\n\n                  // NOTE converting index to string\n                  const isMax = minMax.maxlist.includes(\"\" + index);\n                  const isMin = minMax.minlist.includes(\"\" + index);\n                  const symbol = isMax ? \"▲ \" : isMin ? \"▼ \" : \"\";\n\n                  if (\n                    isMax ||\n                    isMin ||\n                    index === 0 ||\n                    index === graphData.datasets[0].data.length - 1\n                  ) {\n                    return `${symbol}${value.toFixed(1)}°`;\n                  }\n                  return ``;\n                },\n\n                color: \"#fff\",\n                offset: -30,\n                align: \"start\",\n                anchor: \"end\",\n              },\n            },\n\n            scales: {\n              yAxes: [\n                {\n                  ticks: {\n                    display: false,\n                  },\n                },\n              ],\n            },\n            legend: {\n              display: false,\n            },\n            maintainAspectRatio: false,\n            responsive: true,\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default HourlyWeather;\n","/home/tudor/Desktop/thinkful/students/Sergiu/Weather-app/src/Components/DailyWeather.js",["69"],"import React from \"react\";\nimport DateUTC from \"../Util/Date\";\nimport Icon from \"../Util/Icons\";\n\nfunction Day({ dt, weather, temp }) {\n  // Get current date\n  const currentDate = new Date();\n  const currentDay = currentDate.getDate();\n\n  // get API date\n  const { weekday, day } = DateUTC(dt);\n\n  return (\n    <div className=\"weather-card\">\n      <h3 className=\"weather-card_weekday\">\n        {weekday} {day}\n      </h3>\n      <div className=\"weather-card_temp-wp\">\n        <Icon {...weather[0]} />\n        <h3 className=\"weather-card_description\">{weather[0].description}</h3>\n      </div>\n      <h3 className=\"temp\">\n        {Math.trunc(temp.day)}° <span>{Math.trunc(temp.night)}°</span>\n      </h3>\n    </div>\n  );\n}\n\nexport default function DailyWeather({ daily }) {\n  return (\n    <div className=\"weather-daily-wp\">\n      {daily.map((dayInfo, index) => {\n        return <Day {...dayInfo} key={index} />;\n      })}\n    </div>\n  );\n}\n","/home/tudor/Desktop/thinkful/students/Sergiu/Weather-app/src/Util/Icons.js",[],"/home/tudor/Desktop/thinkful/students/Sergiu/Weather-app/src/Util/Date.js",[],"/home/tudor/Desktop/thinkful/students/Sergiu/Weather-app/src/seedData/locations.js",[],"/home/tudor/Desktop/thinkful/students/Sergiu/Weather-app/src/math.js",["70","71","72","73"],"var diff, diffXY, integral, integralXY, extrema, extremaXY;\n\n\n    /**\n     * Calculate differences of a vector.\n     *\n     * Takes an object or array Y with m numbers and returns an array\n     * dY with m-1 numbers that constitutes the differences:\n     * dY = [Y(2)-Y(1) Y(3)-Y(2) ... Y(m)-Y(m-1)]\n     * If Y are function values f(1), f(2), ... with a step size of 1,\n     * then dY constitutes the approximate derivative of f. For a different\n     * step size use diffXY.\n     * NOTE: For a step size other than 1, the differences do NOT constitute\n     * the approximate derivative and thus in those cases use diffXY if you\n     * want to get the derivative.\n     *\n     * If as second parameter a number n is given, the returned array\n     * dY will be the n-th differential, thus above step applied n-times.\n     *\n     * @author Balint Morvai <balint@morvai.de>\n     * @license http://en.wikipedia.org/wiki/MIT_License MIT License\n     * @param values\n     * @param n\n     * @returns Array\n     */\n    diff = function(values, n) {\n        // make y enumerated and define x = 1, 2, 3, ...\n        var x, y;\n        y = enumerate(values);\n        x = Object.keys(y).map(Math.floor);\n        // call diffXY version\n        return diffXY(x, y, n);\n    }\n\n    /**\n     * Calculate approximate derivative of a vector Y, assuming\n     * that Y=f(X) with given vector X.\n     *\n     * Takes objects or arrays X and Y with m numbers and returns\n     * an array dY with m-1 numbers that constitutes the approximate\n     * derivative:\n     * dY = [(Y(2)-Y(1))/(X(2)-X(1))  (Y(3)-Y(2)/(X(3)-X(2)) ...\n     *       (Y(m)-Y(m-1))/((X(m)-X(m-1))]\n     *\n     * If as second parameter a number n is given, the returned array\n     * dY will be the n-th differential, thus above step applied n-times.\n     *\n     * @author Balint Morvai <balint@morvai.de>\n     * @license http://en.wikipedia.org/wiki/MIT_License MIT License\n     * @param x\n     * @param y\n     * @param n\n     * @returns Array\n     */\n    diffXY = function(x, y, n) {\n        // recursive calls to get n-th diff\n        if(n > 1) {\n            y = diffXY(x, y, n-1);\n            x.pop();\n        }\n        // loop through 1,...,m-1 entries of values to get diff\n        var keysX = Object.keys(x);\n        var keysY = Object.keys(y);\n        var len = Math.min(keysX.length-1, keysY.length-1);\n        for (var k = 0; k < len; k++) {\n            y[k] = (y[keysY[k+1]]-y[keysY[k]]) /\n                   (x[keysX[k+1]]-x[keysX[k]]);\n        }\n        y.pop(); // last element is old value, delete it\n\n        return y;\n    }\n\n    /**\n     * Calculate reverse differences of a vector.\n     *\n     * Takes an object or array Y with m numbers and returns an array\n     * IY with m numbers that constitutes the reverse differences:\n     * [ ... -Y(m)-Y(m-1)-Y(m-2)  -Y(m)-Y(m-1)  -Y(m)]\n     * If Y are function values f(1), f(2), ... with a step size of 1,\n     * then IY constitutes the approximate integral of f. For a different\n     * step size use integralXY.\n     *\n     * If as second parameter a number n is given, the returned array\n     * Y will be the n-th integral, thus above step applied n-times.\n     *\n     * NOTE: the integral cannot determine the original set of values\n     * before \"diff\" was applied, thus \"integral(diff(values)) != values\"\n     * due to the nature of integration and differentiation. However the\n     * shape of the result will be the same, the curve will only be\n     * shifted by a constant value. (\"translation\")\n     *\n     * @author Balint Morvai <balint@morvai.de>\n     * @license http://en.wikipedia.org/wiki/MIT_License MIT License\n     * @param values\n     * @param n\n     * @returns Array\n     */\n    integral = function(values, n) {\n        // make y enumerated and define x = 1, 2, 3, ...\n        var x, y;\n        y = enumerate(values);\n        x = Object.keys(y).map(Math.floor);\n        // call integralXY version\n        return integralXY(x, y, n);\n    }\n\n    /**\n     * Calculate approximate integral of a vector, assuming\n     * that Y=f(X) with given vector X.\n     *\n     * Takes an object or array Y with m numbers and returns an array\n     * X with m numbers that constitutes the integral:\n     * [ ...\n     *  -Y(m)*(X(m)-X(m-1)-Y(m-1)*(X(m)-X(m-1)-Y(m-2)*(X(m-1)-X(m-2)-Y(m-3)*(X(m-2)-X(m-3)\n     *  -Y(m)*(X(m)-X(m-1)-Y(m-1)*(X(m)-X(m-1)-Y(m-2)*(X(m-1)-X(m-2)\n     *  -Y(m)*(X(m)-X(m-1)-Y(m-1)*(X(m)-X(m-1)\n     *  -Y(m)*(X(m)-X(m-1))\n     * ]\n     *\n     * If as second parameter a number n is given, the returned array\n     * X will be the n-th integral, thus above step applied n-times.\n     *\n     * NOTE: the integral cannot determine the original set of values\n     * before \"diff\" was applied, thus \"integral(diff(values)) != values\"\n     * due to the nature of integration and differentiation. However the\n     * shape of the result will be the same, the curve will only be\n     * shifted by a constant value. (\"translation\")\n     *\n     * @author Balint Morvai <balint@morvai.de>\n     * @license http://en.wikipedia.org/wiki/MIT_License MIT License\n     * @param x\n     * @param y\n     * @param n\n     * @returns Array\n     */\n    integralXY = function(x, y, n) {\n        // recursive calls to get n-th diff\n        if(n > 1) {\n            y = integral(x, y, n-1);\n        }\n        // loop through m,...,1 entries of values to get integral\n        var keysX = Object.keys(x);\n        var keysY = Object.keys(y);\n        var len = Math.min(keysX.length-1, keysY.length-1);\n        // NOTE: below we would need X(len+1) & Y(len+1) but both are missing;\n        // thus we assume \"X(len+1)-X(len)=X(len)-X(len-1)\" and \"Y(len+1)=0\"\n        y[len] = -y[len]*(x[keysX[len]]-x[keysX[len-1]]);\n        for (var k = len-1; k >= 0; k--) {\n            y[k] = -y[keysY[k]]*(x[keysX[k+1]]-x[keysX[k]])+y[keysY[k+1]];\n        }\n\n        return y;\n    }\n\n    /**\n     * Find local maxima and minima in a list of values.\n     *\n     * Javascript implementation of:\n     * \"A Linear-Time Algorithm That Locates Local Extrema\n     * of a Function of One Variable From Interval Measurement\n     * Results\" - Karen Villaverde, Vladik Kreinovich\n     * (Interval Computations 01/1993; 1993(4))\n     *\n     * Takes an object or array with numbers and returns an object\n     * with two lists of indices: 'minlist' with indices of values\n     * that are local minima and 'maxlist' with indices of values that\n     * are local maxima. Indices can be of any type.\n     * Takes numbers as first parameter and an accuracy > 0 (epsilon)\n     * as second parameter. The accuracy has to be chosen depending\n     * on the fluctuations in the data: smaller values mean greater\n     * reliability in finding extrema but also greater chance of\n     * confusing noise with a local minimum or maximum.\n     *\n     * @author Balint Morvai <balint@morvai.de>\n     * @license http://en.wikipedia.org/wiki/MIT_License MIT License\n     * @param values\n     * @param eps\n     * @returns {minlist: Array, maxlist: Array}\n     */\n    extrema = function(values, eps) {\n        // make y enumerated and define x = 1, 2, 3, ...\n        var x, y;\n        y = enumerate(values);\n        x = Object.keys(y).map(Math.floor);\n        // call extremaXY version\n        var res = extremaXY(x, y, eps);\n        res.minlist = res.minlist.map(function(val) {\n            var index = Math.floor((val[1] + val[0]) / 2);\n            return Object.keys(values)[index];\n        });\n        res.maxlist = res.maxlist.map(function(val) {\n            var index = Math.floor((val[1] + val[0]) / 2);\n            return Object.keys(values)[index];\n        });\n\n        return {minlist: res.minlist, maxlist: res.maxlist};\n    }\n\n    /**\n     * Alternative version that takes vectors [x] and [y] instead of\n     * [values] as input and returns intervals that contain local minima\n     * and local maxima. [x] elements can be of any type.\n     *\n     * @author Balint Morvai <balint@morvai.de>\n     * @license http://en.wikipedia.org/wiki/MIT_License MIT License\n     * @param x\n     * @param y\n     * @param eps\n     * @returns {minlist: Array, maxlist: Array}\n     */\n    extremaXY = function(x, y, eps) {\n        // declare local vars\n        var n, s, m, M, maxlist, minlist, i, j;\n        // define x & y enumerated arrays\n        var enumerate = function(obj) {\n            var arr = [];\n            var keys = Object.keys(obj);\n            for (var k = 0; k < keys.length; k++) {\n                arr[k] = obj[keys[k]];\n            }\n            return arr;\n        }\n        y = enumerate(y);\n        x = enumerate(x);\n        // set initial values\n        n = y.length;\n        s = 0;\n        m = y[0];\n        M = y[0];\n        maxlist = [];\n        minlist = [];\n        i = 1;\n        if (typeof eps == \"undefined\") {\n            eps = 0.1;\n        }\n        // the algorithm\n        while (i < n) {\n            if (s == 0) {\n                if (!(M - eps <= y[i] && y[i] <= m + eps)) {\n                    if (M - eps > y[i]) {\n                        s = -1;\n                    }\n                    if (m + eps < y[i]) {\n                        s = 1;\n                    }\n                }\n                M = Math.max(M, y[i]);\n                m = Math.min(m, y[i]);\n            }\n            else {\n                if (s == 1) {\n                    if (M - eps <= y[i]) {\n                        M = Math.max(M, y[i]);\n                    }\n                    else {\n                        j = i - 1;\n                        while(y[j] >= M - eps) {\n                            j--;\n                        }\n                        maxlist.push( [x[j], x[i]] );\n                        s = -1;\n                        m = y[i];\n                    }\n                }\n                else {\n                    if(s == -1) {\n                        if(m + eps >= y[i]) {\n                            m = Math.min(m, y[i]);\n                        }\n                        else {\n                            j = i - 1;\n                            while(y[j] <= m + eps) {\n                                j--;\n                            }\n                            minlist.push( [x[j], x[i]] );\n                            s = 1;\n                            M = y[i];\n                        }\n                    }\n                }\n            }\n            i++;\n        }\n\n        return {minlist: minlist, maxlist: maxlist};\n    }\n\n    // helper to make an array or object an enumerated array\n    var enumerate = function(obj) {\n        var arr = [];\n        var keys = Object.keys(obj);\n        for (var k = 0; k < keys.length; k++) {\n            arr[k] = obj[keys[k]];\n        }\n        return arr;\n    }\n\n    export {extrema}\n    ",{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":25},{"ruleId":"78","severity":1,"message":"82","line":2,"column":8,"nodeType":"80","messageId":"81","endLine":2,"endColumn":20},{"ruleId":"78","severity":1,"message":"83","line":2,"column":8,"nodeType":"80","messageId":"81","endLine":2,"endColumn":13},{"ruleId":"78","severity":1,"message":"84","line":3,"column":8,"nodeType":"80","messageId":"81","endLine":3,"endColumn":23},{"ruleId":"78","severity":1,"message":"85","line":8,"column":9,"nodeType":"80","messageId":"81","endLine":8,"endColumn":19},{"ruleId":"78","severity":1,"message":"86","line":26,"column":5,"nodeType":"80","messageId":"81","endLine":26,"endColumn":9},{"ruleId":"87","severity":1,"message":"88","line":239,"column":19,"nodeType":"89","messageId":"90","endLine":239,"endColumn":21},{"ruleId":"87","severity":1,"message":"88","line":252,"column":23,"nodeType":"89","messageId":"90","endLine":252,"endColumn":25},{"ruleId":"87","severity":1,"message":"88","line":267,"column":26,"nodeType":"89","messageId":"90","endLine":267,"endColumn":28},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'locationData' is defined but never used.","'Chart' is defined but never used.","'ChartDataLabels' is defined but never used.","'currentDay' is assigned a value but never used.","'diff' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]